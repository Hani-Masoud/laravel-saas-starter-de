#version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: saas-starter-de-app
    container_name: saas-starter-de-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - saas-starter-de-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: saas-starter-de-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - saas-starter-de-network
    depends_on:
      - app

  # MySQL Service
  db:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    image: saas-starter-de-mysql
    container_name: saas-starter-de-db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - saas-starter-de-network

  # PHPMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: saas-starter-de-phpmyadmin
    restart: unless-stopped
    tty: true
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - saas-starter-de-network
    depends_on:
      - db

  # MailHog Service (for email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: saas-starter-de-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - saas-starter-de-network

# Docker Networks
networks:
  saas-starter-de-network:
    driver: bridge

# Volumes
volumes:
  mysql-data:
    driver: local